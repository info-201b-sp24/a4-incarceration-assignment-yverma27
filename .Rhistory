height[height >= 180]
i <- c(height >= 180)
i
name(i)
name[i]
weight[i]
i <- c(weight < 70)
name[i]
x <- c(height > 170)
y <- c(weight > 70)
name[x, y]
name[height > 170 || weight > 70]
name[height > 170 | weight > 70]
cols <- c("yellow", "blue", "green")
cols[3] <- "grey"
cols
cols <- c("yellow", "blue", "green")
cols
cols[3] <- "grey"
cols
incomes
incomes[incomes > 60] <- 60
incomes
nums <- -5:5
nums
nums[nums < 0] <- 0
nums
n <- 1:19
i <- (n %% 2) == 1
n[i]
n[i] <- -n[i]
n
x <- list(1, TRUE, c("purple", "gold"))
x
college <- list(colors = c("purple", "gold"),
established = 1861,
students = 40000)
college
college$students
college$colors
college$majors <- c("info", "engineering", "business", "computer science", "biology")
college
temp <- 115
temp > 120
temp <- 115
if(temp > 120){
print("Too hot")
}
temp <- 115
if(temp > 120){
print("Too hot")
}
temp <- 115
if(temp > 120){
print("Too hot")
}else{
return FALSE
temp <- 115
if(temp > 120){
print("Too hot")
}
temp <- 130
if(temp > 120){
print("Too hot")
}
temp <- 130
if(temp > 120){
print("Too hot\n")
}
temp <- 130
if(temp > 120){
print("Too hot", \n)
temp <- 130
if(temp > 120){
print("Too hot", "\n")
}
temp <- 130
if(temp > 120){
cat("Too hot", "\n")
}
temp <- 130
if(temp >= 70 | temp < 120){
cat("Too hot", "\n")
}
temp <- 70
if(temp >= 70 | temp < 120){
cat("Too hot", "\n")
}
temp <- 60
if(temp >= 70 | temp < 120){
cat("Too hot", "\n")
}
temp <- 60
if(temp >= 70 | temp < 120){
cat("Too hot", "\n")
}
temp <- 60
if(temp >= 70 & temp < 120){
cat("Too hot", "\n")
}
num <- 1:10
for(num){
?for
num <- 1:10
for (variable in vector) {
?for
num <- 1:10
num <- 1:10
for(n in num){
cat("n\n")
if(n %% 2 == 0){
cat("even\n")
}
}
num <- 1:10
for(n in 1:10){
cat("n\n")
if(n %% 2 == 0){
cat("even\n")
}
}
num <- 1:10
for(n in 1:10){
cat(n"\n")
for(n in 1:10){
cat(n, "\n")
if(n %% 2 == 0){
cat("even\n")
}
}
for(n in 1:10){
if(n %% 2 == 0){
cat(n, "even \n")
}else{
cat(n, "odd\n")
}
}
for(n in 1:10){
cat(n)
if(n %% 2 == 0){
cat("even \n")
}else{
cat("odd\n")
}
}
for(n in 1:10){
cat(n)
if(n %% 2 == 0){
cat(" even \n")
}else{
cat(" odd\n")
}
}
for(n in c(1, 2, 1.5)){
cat(n)
if(n %% 2 == 0){
cat(" even \n")
}else{
cat(" odd\n")
}
}
temp <- 60
for(n in 1:10){
cat(n)
if(n %% 2 == 0){
cat(" even \n")
}else{
cat(" odd\n")
}
}
prices <- c(5, 6, 7, 8)
if(any(prices < 7)){
cat("you can get a drink \n")
}else {
cat("this place is too expensive \n")
}
prices <- c(8, 9, 10, 11)
if(any(prices < 7)){
cat("you can get a drink \n")
}else {
cat("this place is too expensive \n")
}
prices <- c(8, 9, 10, 11)
if(any(prices < 7)){
cat("you can get a drink \n")
}else {
cat("this place is too expensive \n")
}
x <- -3:3
abs(x)
abs2 <- function(x){
ifelse( x < 0, -x,x)
}
abs2(c(-3, 3, -1, 1))
abs2 <- function(x){
ifelse( x < 0, -x,x)
}
abs2(x)
x <- -3:3
abs1(x)
abs2 <- function(x){
ifelse( x < 0, -x,x)
}
abs2(x)
knitr::opts_chunk$set(echo = TRUE)
vector <- c('x', 'x,', 'x', 1,3,5,7,9,2,4,6,8,10)
vector_class <- class(vector)
vector_class
pos_odd_integer_vector <- seq(1, 99, 2)
pos_odd_integer_vector
updated_values <- pos_odd_integer_vector[pos_odd_integer_vector <= 60 | pos_odd_integer_vector >= 80]
updated_values
updated_values <- pos_odd_integer_vector[pos_odd_integer_vector <= 60 && pos_odd_integer_vector >= 80]
updated_values <- pos_odd_integer_vector[pos_odd_integer_vector <= 60 & pos_odd_integer_vector >= 80]
updated_values
updated_values <- pos_odd_integer_vector[pos_odd_integer_vector <= 60 | pos_odd_integer_vector >= 80]
updated_values
stats <- function(input){
sd <- sd(input)
mean <- mean(input)
median <- median(input)
}
stats(vector)
stats <- function(input){
sd <- sd(input)
mean <- mean(input)
median <- median(input)
return(list(standard deviation value=sd, mean value=mean, median value=median))
stats <- function(input){
sd_value <- sd(input)
mean_value <- mean(input)
median_value <- median(input)
return(list(standard dev = sd_value, mean = mean_value, median = median_value))
stats <- function(input){
sd_value <- sd(input)
mean_value <- mean(input)
median_value <- median(input)
return(list(standard_dev = sd_value, mean = mean_value, median = median_value))
}
stats(vector)
stats <- function(input){
sd_value <- sd(input)
mean_value <- mean(input)
median_value <- median(input)
return(list(standard_dev = sd_value, mean = mean_value, median = median_value))
}
stats(updated_values)
x1_method1 <- matrix(c(2, 3, 7, 1, 6, 2, 3, 5, 1), nrow = 3)
x2_method1 <- matrix(c(3, 2, 9, 0, 7, 8, 5, 8, 2), nrow = 3)
x1_method1
x1_method1 <- matrix(c(2, 3, 7, 1, 6, 2, 3, 5, 1), nrow = 3)
x2_method1 <- matrix(c(3, 2, 9, 0, 7, 8, 5, 8, 2), nrow = 3)
x1_method1
x2_method1
x1_method1 <- matrix(c(2, 3, 7, 1, 6, 2, 3, 5, 1), nrow = 3)
x2_method1 <- matrix(c(3, 2, 9, 0, 7, 8, 5, 8, 2), nrow = 3)
x1_method1
x2_method1
x1_method1 <- matrix(c(2, 3, 7, 1, 6, 2, 3, 5, 1), nrow = 3, byrow = TRUE)
x2_method1 <- matrix(c(3, 2, 9, 0, 7, 8, 5, 8, 2), nrow = 3, byrow= TRUE)
x1_method1
x2_method1
x1_method2 <- matrix(c(2, 3, 7, 1, 6, 2, 3, 5, 1), nrow = 3)
x2_method2 <- matrix(c(3, 2, 9, 0, 7, 8, 5, 8, 2), nrow = 3)
x1_method2
x2_method2
matrix_product <- x1_method1 %*% x2_method1
matrix_product
matrix_product1 <- x1_method1 %*% x2_method1
matrix_product1
matrix_product2 <- x1_method2 %*% x2_method2
matrix_product2
dataframe_class <- class(iris)
dataframe_class
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
View(iris)
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
View(iris)
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
View(iris)
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
iris_row_names <- row.names(iris)
iris_row_names
View(iris)
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
iris_row_names <- rownames(iris)
iris_row_names
View(iris)
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
iris_row_names <- rownames(iris)
iris_row_names
iris_col_names <- colnames(iris)
iris_col_names
View(iris)
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
iris_row_names <- rownames(iris)
iris_row_names
iris_col_names <- colnames(iris)
iris_col_names
iris_num_rows <- nrow(iris)
iris_num_rows
iris_num_cols <- ncol(iris)
iris_num_cols
dataframe_class <- class(iris)
dataframe_class
columns_class <- sapply(iris, class)
columns_class
iris_summary <- summary(iris)
iris_summary
iris_row_names <- rownames(iris)
iris_row_names
iris_col_names <- colnames(iris)
iris_col_names
iris_num_rows <- nrow(iris)
iris_num_rows
iris_num_cols <- ncol(iris)
iris_num_cols
iris_last_two_rows_and_cols <- tail(iris[, c((ncol(iris - 1):ncol(iris)))], 2)
iris_last_two_rows_and_cols
iris_last_two_rows_and_cols <- tail(iris[, -c(1:ncol(iris-2))], 2)
iris_last_two_rows_and_cols
iris_last_two_rows_and_cols <- iris[(nrow(iris)-1):nrow(iris), (ncol(iris)-1):ncol(iris)]
iris_last_two_rows_and_cols
library(tidyverse)
setwd("C:/Users/yuvik/OneDrive - UW/INFO 201 - SPR '24/INFO201/a4-incarceration-assignment-yverma27")
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
dataset1 <- read.csv("us-jail-pop.csv")
updat
updated_dataset1 <- na.omit(dataset1)
View(updated_dataset1)
library(tidyverse)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
# Reshape the data from wide to long format
data_long <- updated_dataset1 %>%
pivot_longer(
cols = starts_with("male_") | starts_with("female_"),
names_to = c("gender", "age_group"),
names_pattern = "(male|female)_(adult|juvenile)_jail_pop",
values_to = "population"
)
# Ensure gender and age_group are factors with appropriate levels
data_long <- data_long %>%
mutate(
gender = factor(gender, levels = c("male", "female"), labels = c("Male", "Female")),
age_group = factor(age_group, levels = c("adult", "juvenile"), labels = c("Adult", "Juvenile"))
)
# Create the plot
ggplot(data_long, aes(x = year, y = population, color = gender, linetype = age_group)) +
geom_line(size = 1) +
labs(
title = "Trends in US Jail Populations Over Time",
x = "Year",
y = "Population",
color = "Gender",
linetype = "Age Group"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "bottom"
)
View(data_long)
library(tidyverse)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
# Reshape the data from wide to long format, excluding male_jail_pop and female_jail_pop
data_long <- data %>%
pivot_longer(
cols = -c(year, male_jail_pop, female_jail_pop),
names_to = c("gender", "age_group"),
names_pattern = "(male|female)_(adult|juvenile)_jail_pop",
values_to = "population"
)
library(tidyverse)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
# Reshape the data from wide to long format, excluding male_jail_pop and female_jail_pop
data_long <- updated_dataset1 %>%
pivot_longer(
cols = -c(year, male_jail_pop, female_jail_pop),
names_to = c("gender", "age_group"),
names_pattern = "(male|female)_(adult|juvenile)_jail_pop",
values_to = "population"
)
library(tidyverse)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
# Reshape the data from wide to long format, excluding male_jail_pop and female_jail_pop
data_long <- updated_dataset1 %>%
pivot_longer(
cols = -c(year, male_jail_pop, female_jail_pop),
names_to = c("gender", "age_group"),
names_pattern = "(male|female)_(adult|juvenile)_jail_pop",
values_to = "population"
)
library(tidyverse)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
# Reshape the data from wide to long format, explicitly selecting the correct columns
data_long <- updated_dataset1 %>%
pivot_longer(
cols = starts_with("male_") | starts_with("female_"),
names_to = c("gender", "age_group"),
names_pattern = "(male|female)_(adult|juvenile)_jail_pop",
values_to = "population",
values_drop_na = TRUE # Drop any rows where the population is NA
)
# Ensure gender and age_group are factors with appropriate levels
data_long <- data_long %>%
mutate(
gender = factor(gender, levels = c("male", "female"), labels = c("Male", "Female")),
age_group = factor(age_group, levels = c("adult", "juvenile"), labels = c("Adult", "Juvenile"))
)
# Create the plot
ggplot(data_long, aes(x = year, y = population, color = gender, linetype = age_group)) +
geom_line(size = 1) +
labs(
title = "Trends in US Jail Populations Over Time",
x = "Year",
y = "Population",
color = "Gender",
linetype = "Age Group"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "bottom"
)
library(ggplot2)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
ggplot(updated_dataset1, aes(x = year)) +
geom_line(aes(y = aapi_jail_pop, color = "AAPI")) +
geom_line(aes(y = black_jail_pop, color = "Black")) +
geom_line(aes(y = latinx_jail_pop, color = "Latinx")) +
geom_line(aes(y = native_jail_pop, color = "Native")) +
geom_line(aes(y = white_jail_pop, color = "White")) +
geom_line(aes(y = other_race_jail_pop, color = "Other")) +
labs(title = "Jail Population Trends by Ethnicity",
x = "Year",
y = "Jail Population",
color = "Ethnicity") +
scale_color_manual(values = c("AAPI" = "blue", "Black" = "red",
"Latinx" = "green", "Native" = "purple",
"White" = "orange", "Other" = "gray")) +
theme_minimal()
View(dataset1)
library(ggplot2)
dataset1 <- read.csv("us-jail-pop.csv")
updated_dataset1 <- na.omit(dataset1)
agg_data <- updated_dataset1 %>%
group_by(year) %>%
summarize(
aapi_jail_pop_avg = mean(aapi_jail_pop),
black_jail_pop_avg = mean(black_jail_pop),
latinx_jail_pop_avg = mean(latinx_jail_pop),
native_jail_pop_avg = mean(native_jail_pop),
white_jail_pop_avg = mean(white_jail_pop),
other_race_jail_pop_avg = mean(other_race_jail_pop)
)
# Create a line plot showing trends over time for each ethnicity
ggplot(agg_data, aes(x = year)) +
geom_line(aes(y = aapi_jail_pop_avg, color = "AAPI")) +
geom_line(aes(y = black_jail_pop_avg, color = "Black")) +
geom_line(aes(y = latinx_jail_pop_avg, color = "Latinx")) +
geom_line(aes(y = native_jail_pop_avg, color = "Native")) +
geom_line(aes(y = white_jail_pop_avg, color = "White")) +
geom_line(aes(y = other_race_jail_pop_avg, color = "Other")) +
labs(title = "Average Jail Population Trends by Ethnicity",
x = "Year",
y = "Average Jail Population",
color = "Ethnicity") +
scale_color_manual(values = c("AAPI" = "blue", "Black" = "red",
"Latinx" = "green", "Native" = "purple",
"White" = "orange", "Other" = "gray")) +
theme_minimal()
View(agg_data)
